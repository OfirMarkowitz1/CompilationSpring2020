Grammar

    0 $accept: Program $end

    1 Program: Funcs

    2 Funcs: /* empty */
    3      | FuncDecl Funcs

    4 @1: /* empty */

    5 FuncDecl: RetType ID LPAREN Formals RPAREN LBRACE @1 Statements RBRACE

    6 RetType: Type
    7        | VOID

    8 Formals: /* empty */
    9        | FormalsList

   10 FormalsList: FormalDecl
   11            | FormalDecl COMMA FormalsList

   12 FormalDecl: Type ID

   13 Statements: Statement
   14           | Statements Statement

   15 @2: /* empty */

   16 Statement: LBRACE @2 Statements RBRACE
   17          | Type ID SC
   18          | Type ID ASSIGN Exp SC
   19          | ID ASSIGN Exp SC
   20          | Call SC
   21          | RETURN SC
   22          | RETURN Exp SC
   23          | IfBase Statement

   24 @3: /* empty */

   25 Statement: IfBase Statement ELSE @3 Statement
   26          | WhileExp Statement

   27 @4: /* empty */

   28 Statement: WhileExp Statement ELSE @4 Statement
   29          | BREAK SC
   30          | CONTINUE SC

   31 Call: ID LPAREN ExpList RPAREN
   32     | ID LPAREN RPAREN

   33 ExpList: Exp

   34 @5: /* empty */

   35 ExpList: Exp COMMA @5 ExpList

   36 Type: INT
   37     | BYTE
   38     | BOOL

   39 Exp: LPAREN Exp RPAREN
   40    | Exp ADDITIVE Exp
   41    | Exp MULTIPLICATIVE Exp
   42    | ID
   43    | Call
   44    | NUM
   45    | NUM B
   46    | STRING
   47    | TRUE
   48    | FALSE
   49    | NOT Exp
   50    | Exp AND M Exp
   51    | Exp OR M Exp
   52    | Exp RELATIONAL Exp
   53    | Exp EQUALITY Exp

   54 IfBase: IF LPAREN Exp RPAREN

   55 WhileExp: WHILE LPAREN M Exp RPAREN

   56 M: /* empty */


Terminals, with rules where they appear

$end (0) 0
error (256)
VOID (258) 7
INT (259) 36
BYTE (260) 37
B (261) 45
BOOL (262) 38
TRUE (263) 47
FALSE (264) 48
RETURN (265) 21 22
IF (266) 54
WHILE (267) 55
BREAK (268) 29
CONTINUE (269) 30
COMMA (270) 11 35
ID (271) 5 12 17 18 19 31 32 42
NUM (272) 44 45
STRING (273) 46
LBRACE (274) 5 16
RBRACE (275) 5 16
LPAREN (276) 5 31 32 39 54 55
RPAREN (277) 5 31 32 39 54 55
SC (278) 17 18 19 20 21 22 29 30
COND_WITHOUT_ELSE (279)
ELSE (280) 25 28
ASSIGN (281) 18 19
OR (282) 51
AND (283) 50
EQUALITY (284) 53
RELATIONAL (285) 52
ADDITIVE (286) 40
MULTIPLICATIVE (287) 41
NOT (288) 49


Nonterminals, with rules where they appear

$accept (34)
    on left: 0
Program (35)
    on left: 1, on right: 0
Funcs (36)
    on left: 2 3, on right: 1 3
FuncDecl (37)
    on left: 5, on right: 3
@1 (38)
    on left: 4, on right: 5
RetType (39)
    on left: 6 7, on right: 5
Formals (40)
    on left: 8 9, on right: 5
FormalsList (41)
    on left: 10 11, on right: 9 11
FormalDecl (42)
    on left: 12, on right: 10 11
Statements (43)
    on left: 13 14, on right: 5 14 16
Statement (44)
    on left: 16 17 18 19 20 21 22 23 25 26 28 29 30,
    on right: 13 14 23 25 26 28
@2 (45)
    on left: 15, on right: 16
@3 (46)
    on left: 24, on right: 25
@4 (47)
    on left: 27, on right: 28
Call (48)
    on left: 31 32, on right: 20 43
ExpList (49)
    on left: 33 35, on right: 31 35
@5 (50)
    on left: 34, on right: 35
Type (51)
    on left: 36 37 38, on right: 6 12 17 18
Exp (52)
    on left: 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53,
    on right: 18 19 22 33 35 39 40 41 49 50 51 52 53 54 55
IfBase (53)
    on left: 54, on right: 23 25
WhileExp (54)
    on left: 55, on right: 26 28
M (55)
    on left: 56, on right: 50 51 55


state 0

    0 $accept: . Program $end

    VOID  shift, and go to state 1
    INT   shift, and go to state 2
    BYTE  shift, and go to state 3
    BOOL  shift, and go to state 4

    $default  reduce using rule 2 (Funcs)

    Program   go to state 5
    Funcs     go to state 6
    FuncDecl  go to state 7
    RetType   go to state 8
    Type      go to state 9


state 1

    7 RetType: VOID .

    $default  reduce using rule 7 (RetType)


state 2

   36 Type: INT .

    $default  reduce using rule 36 (Type)


state 3

   37 Type: BYTE .

    $default  reduce using rule 37 (Type)


state 4

   38 Type: BOOL .

    $default  reduce using rule 38 (Type)


state 5

    0 $accept: Program . $end

    $end  shift, and go to state 10


state 6

    1 Program: Funcs .

    $default  reduce using rule 1 (Program)


state 7

    3 Funcs: FuncDecl . Funcs

    VOID  shift, and go to state 1
    INT   shift, and go to state 2
    BYTE  shift, and go to state 3
    BOOL  shift, and go to state 4

    $default  reduce using rule 2 (Funcs)

    Funcs     go to state 11
    FuncDecl  go to state 7
    RetType   go to state 8
    Type      go to state 9


state 8

    5 FuncDecl: RetType . ID LPAREN Formals RPAREN LBRACE @1 Statements RBRACE

    ID  shift, and go to state 12


state 9

    6 RetType: Type .

    $default  reduce using rule 6 (RetType)


state 10

    0 $accept: Program $end .

    $default  accept


state 11

    3 Funcs: FuncDecl Funcs .

    $default  reduce using rule 3 (Funcs)


state 12

    5 FuncDecl: RetType ID . LPAREN Formals RPAREN LBRACE @1 Statements RBRACE

    LPAREN  shift, and go to state 13


state 13

    5 FuncDecl: RetType ID LPAREN . Formals RPAREN LBRACE @1 Statements RBRACE

    INT   shift, and go to state 2
    BYTE  shift, and go to state 3
    BOOL  shift, and go to state 4

    $default  reduce using rule 8 (Formals)

    Formals      go to state 14
    FormalsList  go to state 15
    FormalDecl   go to state 16
    Type         go to state 17


state 14

    5 FuncDecl: RetType ID LPAREN Formals . RPAREN LBRACE @1 Statements RBRACE

    RPAREN  shift, and go to state 18


state 15

    9 Formals: FormalsList .

    $default  reduce using rule 9 (Formals)


state 16

   10 FormalsList: FormalDecl .
   11            | FormalDecl . COMMA FormalsList

    COMMA  shift, and go to state 19

    $default  reduce using rule 10 (FormalsList)


state 17

   12 FormalDecl: Type . ID

    ID  shift, and go to state 20


state 18

    5 FuncDecl: RetType ID LPAREN Formals RPAREN . LBRACE @1 Statements RBRACE

    LBRACE  shift, and go to state 21


state 19

   11 FormalsList: FormalDecl COMMA . FormalsList

    INT   shift, and go to state 2
    BYTE  shift, and go to state 3
    BOOL  shift, and go to state 4

    FormalsList  go to state 22
    FormalDecl   go to state 16
    Type         go to state 17


state 20

   12 FormalDecl: Type ID .

    $default  reduce using rule 12 (FormalDecl)


state 21

    5 FuncDecl: RetType ID LPAREN Formals RPAREN LBRACE . @1 Statements RBRACE

    $default  reduce using rule 4 (@1)

    @1  go to state 23


state 22

   11 FormalsList: FormalDecl COMMA FormalsList .

    $default  reduce using rule 11 (FormalsList)


state 23

    5 FuncDecl: RetType ID LPAREN Formals RPAREN LBRACE @1 . Statements RBRACE

    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    RETURN    shift, and go to state 24
    IF        shift, and go to state 25
    WHILE     shift, and go to state 26
    BREAK     shift, and go to state 27
    CONTINUE  shift, and go to state 28
    ID        shift, and go to state 29
    LBRACE    shift, and go to state 30

    Statements  go to state 31
    Statement   go to state 32
    Call        go to state 33
    Type        go to state 34
    IfBase      go to state 35
    WhileExp    go to state 36


state 24

   21 Statement: RETURN . SC
   22          | RETURN . Exp SC

    TRUE    shift, and go to state 37
    FALSE   shift, and go to state 38
    ID      shift, and go to state 39
    NUM     shift, and go to state 40
    STRING  shift, and go to state 41
    LPAREN  shift, and go to state 42
    SC      shift, and go to state 43
    NOT     shift, and go to state 44

    Call  go to state 45
    Exp   go to state 46


state 25

   54 IfBase: IF . LPAREN Exp RPAREN

    LPAREN  shift, and go to state 47


state 26

   55 WhileExp: WHILE . LPAREN M Exp RPAREN

    LPAREN  shift, and go to state 48


state 27

   29 Statement: BREAK . SC

    SC  shift, and go to state 49


state 28

   30 Statement: CONTINUE . SC

    SC  shift, and go to state 50


state 29

   19 Statement: ID . ASSIGN Exp SC
   31 Call: ID . LPAREN ExpList RPAREN
   32     | ID . LPAREN RPAREN

    LPAREN  shift, and go to state 51
    ASSIGN  shift, and go to state 52


state 30

   16 Statement: LBRACE . @2 Statements RBRACE

    $default  reduce using rule 15 (@2)

    @2  go to state 53


state 31

    5 FuncDecl: RetType ID LPAREN Formals RPAREN LBRACE @1 Statements . RBRACE
   14 Statements: Statements . Statement

    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    RETURN    shift, and go to state 24
    IF        shift, and go to state 25
    WHILE     shift, and go to state 26
    BREAK     shift, and go to state 27
    CONTINUE  shift, and go to state 28
    ID        shift, and go to state 29
    LBRACE    shift, and go to state 30
    RBRACE    shift, and go to state 54

    Statement  go to state 55
    Call       go to state 33
    Type       go to state 34
    IfBase     go to state 35
    WhileExp   go to state 36


state 32

   13 Statements: Statement .

    $default  reduce using rule 13 (Statements)


state 33

   20 Statement: Call . SC

    SC  shift, and go to state 56


state 34

   17 Statement: Type . ID SC
   18          | Type . ID ASSIGN Exp SC

    ID  shift, and go to state 57


state 35

   23 Statement: IfBase . Statement
   25          | IfBase . Statement ELSE @3 Statement

    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    RETURN    shift, and go to state 24
    IF        shift, and go to state 25
    WHILE     shift, and go to state 26
    BREAK     shift, and go to state 27
    CONTINUE  shift, and go to state 28
    ID        shift, and go to state 29
    LBRACE    shift, and go to state 30

    Statement  go to state 58
    Call       go to state 33
    Type       go to state 34
    IfBase     go to state 35
    WhileExp   go to state 36


state 36

   26 Statement: WhileExp . Statement
   28          | WhileExp . Statement ELSE @4 Statement

    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    RETURN    shift, and go to state 24
    IF        shift, and go to state 25
    WHILE     shift, and go to state 26
    BREAK     shift, and go to state 27
    CONTINUE  shift, and go to state 28
    ID        shift, and go to state 29
    LBRACE    shift, and go to state 30

    Statement  go to state 59
    Call       go to state 33
    Type       go to state 34
    IfBase     go to state 35
    WhileExp   go to state 36


state 37

   47 Exp: TRUE .

    $default  reduce using rule 47 (Exp)


state 38

   48 Exp: FALSE .

    $default  reduce using rule 48 (Exp)


state 39

   31 Call: ID . LPAREN ExpList RPAREN
   32     | ID . LPAREN RPAREN
   42 Exp: ID .

    LPAREN  shift, and go to state 51

    $default  reduce using rule 42 (Exp)


state 40

   44 Exp: NUM .
   45    | NUM . B

    B  shift, and go to state 60

    $default  reduce using rule 44 (Exp)


state 41

   46 Exp: STRING .

    $default  reduce using rule 46 (Exp)


state 42

   39 Exp: LPAREN . Exp RPAREN

    TRUE    shift, and go to state 37
    FALSE   shift, and go to state 38
    ID      shift, and go to state 39
    NUM     shift, and go to state 40
    STRING  shift, and go to state 41
    LPAREN  shift, and go to state 42
    NOT     shift, and go to state 44

    Call  go to state 45
    Exp   go to state 61


state 43

   21 Statement: RETURN SC .

    $default  reduce using rule 21 (Statement)


state 44

   49 Exp: NOT . Exp

    TRUE    shift, and go to state 37
    FALSE   shift, and go to state 38
    ID      shift, and go to state 39
    NUM     shift, and go to state 40
    STRING  shift, and go to state 41
    LPAREN  shift, and go to state 42
    NOT     shift, and go to state 44

    Call  go to state 45
    Exp   go to state 62


state 45

   43 Exp: Call .

    $default  reduce using rule 43 (Exp)


state 46

   22 Statement: RETURN Exp . SC
   40 Exp: Exp . ADDITIVE Exp
   41    | Exp . MULTIPLICATIVE Exp
   50    | Exp . AND M Exp
   51    | Exp . OR M Exp
   52    | Exp . RELATIONAL Exp
   53    | Exp . EQUALITY Exp

    SC              shift, and go to state 63
    OR              shift, and go to state 64
    AND             shift, and go to state 65
    EQUALITY        shift, and go to state 66
    RELATIONAL      shift, and go to state 67
    ADDITIVE        shift, and go to state 68
    MULTIPLICATIVE  shift, and go to state 69


state 47

   54 IfBase: IF LPAREN . Exp RPAREN

    TRUE    shift, and go to state 37
    FALSE   shift, and go to state 38
    ID      shift, and go to state 39
    NUM     shift, and go to state 40
    STRING  shift, and go to state 41
    LPAREN  shift, and go to state 42
    NOT     shift, and go to state 44

    Call  go to state 45
    Exp   go to state 70


state 48

   55 WhileExp: WHILE LPAREN . M Exp RPAREN

    $default  reduce using rule 56 (M)

    M  go to state 71


state 49

   29 Statement: BREAK SC .

    $default  reduce using rule 29 (Statement)


state 50

   30 Statement: CONTINUE SC .

    $default  reduce using rule 30 (Statement)


state 51

   31 Call: ID LPAREN . ExpList RPAREN
   32     | ID LPAREN . RPAREN

    TRUE    shift, and go to state 37
    FALSE   shift, and go to state 38
    ID      shift, and go to state 39
    NUM     shift, and go to state 40
    STRING  shift, and go to state 41
    LPAREN  shift, and go to state 42
    RPAREN  shift, and go to state 72
    NOT     shift, and go to state 44

    Call     go to state 45
    ExpList  go to state 73
    Exp      go to state 74


state 52

   19 Statement: ID ASSIGN . Exp SC

    TRUE    shift, and go to state 37
    FALSE   shift, and go to state 38
    ID      shift, and go to state 39
    NUM     shift, and go to state 40
    STRING  shift, and go to state 41
    LPAREN  shift, and go to state 42
    NOT     shift, and go to state 44

    Call  go to state 45
    Exp   go to state 75


state 53

   16 Statement: LBRACE @2 . Statements RBRACE

    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    RETURN    shift, and go to state 24
    IF        shift, and go to state 25
    WHILE     shift, and go to state 26
    BREAK     shift, and go to state 27
    CONTINUE  shift, and go to state 28
    ID        shift, and go to state 29
    LBRACE    shift, and go to state 30

    Statements  go to state 76
    Statement   go to state 32
    Call        go to state 33
    Type        go to state 34
    IfBase      go to state 35
    WhileExp    go to state 36


state 54

    5 FuncDecl: RetType ID LPAREN Formals RPAREN LBRACE @1 Statements RBRACE .

    $default  reduce using rule 5 (FuncDecl)


state 55

   14 Statements: Statements Statement .

    $default  reduce using rule 14 (Statements)


state 56

   20 Statement: Call SC .

    $default  reduce using rule 20 (Statement)


state 57

   17 Statement: Type ID . SC
   18          | Type ID . ASSIGN Exp SC

    SC      shift, and go to state 77
    ASSIGN  shift, and go to state 78


state 58

   23 Statement: IfBase Statement .
   25          | IfBase Statement . ELSE @3 Statement

    ELSE  shift, and go to state 79

    $default  reduce using rule 23 (Statement)


state 59

   26 Statement: WhileExp Statement .
   28          | WhileExp Statement . ELSE @4 Statement

    ELSE  shift, and go to state 80

    $default  reduce using rule 26 (Statement)


state 60

   45 Exp: NUM B .

    $default  reduce using rule 45 (Exp)


state 61

   39 Exp: LPAREN Exp . RPAREN
   40    | Exp . ADDITIVE Exp
   41    | Exp . MULTIPLICATIVE Exp
   50    | Exp . AND M Exp
   51    | Exp . OR M Exp
   52    | Exp . RELATIONAL Exp
   53    | Exp . EQUALITY Exp

    RPAREN          shift, and go to state 81
    OR              shift, and go to state 64
    AND             shift, and go to state 65
    EQUALITY        shift, and go to state 66
    RELATIONAL      shift, and go to state 67
    ADDITIVE        shift, and go to state 68
    MULTIPLICATIVE  shift, and go to state 69


state 62

   40 Exp: Exp . ADDITIVE Exp
   41    | Exp . MULTIPLICATIVE Exp
   49    | NOT Exp .
   50    | Exp . AND M Exp
   51    | Exp . OR M Exp
   52    | Exp . RELATIONAL Exp
   53    | Exp . EQUALITY Exp

    $default  reduce using rule 49 (Exp)


state 63

   22 Statement: RETURN Exp SC .

    $default  reduce using rule 22 (Statement)


state 64

   51 Exp: Exp OR . M Exp

    $default  reduce using rule 56 (M)

    M  go to state 82


state 65

   50 Exp: Exp AND . M Exp

    $default  reduce using rule 56 (M)

    M  go to state 83


state 66

   53 Exp: Exp EQUALITY . Exp

    TRUE    shift, and go to state 37
    FALSE   shift, and go to state 38
    ID      shift, and go to state 39
    NUM     shift, and go to state 40
    STRING  shift, and go to state 41
    LPAREN  shift, and go to state 42
    NOT     shift, and go to state 44

    Call  go to state 45
    Exp   go to state 84


state 67

   52 Exp: Exp RELATIONAL . Exp

    TRUE    shift, and go to state 37
    FALSE   shift, and go to state 38
    ID      shift, and go to state 39
    NUM     shift, and go to state 40
    STRING  shift, and go to state 41
    LPAREN  shift, and go to state 42
    NOT     shift, and go to state 44

    Call  go to state 45
    Exp   go to state 85


state 68

   40 Exp: Exp ADDITIVE . Exp

    TRUE    shift, and go to state 37
    FALSE   shift, and go to state 38
    ID      shift, and go to state 39
    NUM     shift, and go to state 40
    STRING  shift, and go to state 41
    LPAREN  shift, and go to state 42
    NOT     shift, and go to state 44

    Call  go to state 45
    Exp   go to state 86


state 69

   41 Exp: Exp MULTIPLICATIVE . Exp

    TRUE    shift, and go to state 37
    FALSE   shift, and go to state 38
    ID      shift, and go to state 39
    NUM     shift, and go to state 40
    STRING  shift, and go to state 41
    LPAREN  shift, and go to state 42
    NOT     shift, and go to state 44

    Call  go to state 45
    Exp   go to state 87


state 70

   40 Exp: Exp . ADDITIVE Exp
   41    | Exp . MULTIPLICATIVE Exp
   50    | Exp . AND M Exp
   51    | Exp . OR M Exp
   52    | Exp . RELATIONAL Exp
   53    | Exp . EQUALITY Exp
   54 IfBase: IF LPAREN Exp . RPAREN

    RPAREN          shift, and go to state 88
    OR              shift, and go to state 64
    AND             shift, and go to state 65
    EQUALITY        shift, and go to state 66
    RELATIONAL      shift, and go to state 67
    ADDITIVE        shift, and go to state 68
    MULTIPLICATIVE  shift, and go to state 69


state 71

   55 WhileExp: WHILE LPAREN M . Exp RPAREN

    TRUE    shift, and go to state 37
    FALSE   shift, and go to state 38
    ID      shift, and go to state 39
    NUM     shift, and go to state 40
    STRING  shift, and go to state 41
    LPAREN  shift, and go to state 42
    NOT     shift, and go to state 44

    Call  go to state 45
    Exp   go to state 89


state 72

   32 Call: ID LPAREN RPAREN .

    $default  reduce using rule 32 (Call)


state 73

   31 Call: ID LPAREN ExpList . RPAREN

    RPAREN  shift, and go to state 90


state 74

   33 ExpList: Exp .
   35        | Exp . COMMA @5 ExpList
   40 Exp: Exp . ADDITIVE Exp
   41    | Exp . MULTIPLICATIVE Exp
   50    | Exp . AND M Exp
   51    | Exp . OR M Exp
   52    | Exp . RELATIONAL Exp
   53    | Exp . EQUALITY Exp

    COMMA           shift, and go to state 91
    OR              shift, and go to state 64
    AND             shift, and go to state 65
    EQUALITY        shift, and go to state 66
    RELATIONAL      shift, and go to state 67
    ADDITIVE        shift, and go to state 68
    MULTIPLICATIVE  shift, and go to state 69

    $default  reduce using rule 33 (ExpList)


state 75

   19 Statement: ID ASSIGN Exp . SC
   40 Exp: Exp . ADDITIVE Exp
   41    | Exp . MULTIPLICATIVE Exp
   50    | Exp . AND M Exp
   51    | Exp . OR M Exp
   52    | Exp . RELATIONAL Exp
   53    | Exp . EQUALITY Exp

    SC              shift, and go to state 92
    OR              shift, and go to state 64
    AND             shift, and go to state 65
    EQUALITY        shift, and go to state 66
    RELATIONAL      shift, and go to state 67
    ADDITIVE        shift, and go to state 68
    MULTIPLICATIVE  shift, and go to state 69


state 76

   14 Statements: Statements . Statement
   16 Statement: LBRACE @2 Statements . RBRACE

    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    RETURN    shift, and go to state 24
    IF        shift, and go to state 25
    WHILE     shift, and go to state 26
    BREAK     shift, and go to state 27
    CONTINUE  shift, and go to state 28
    ID        shift, and go to state 29
    LBRACE    shift, and go to state 30
    RBRACE    shift, and go to state 93

    Statement  go to state 55
    Call       go to state 33
    Type       go to state 34
    IfBase     go to state 35
    WhileExp   go to state 36


state 77

   17 Statement: Type ID SC .

    $default  reduce using rule 17 (Statement)


state 78

   18 Statement: Type ID ASSIGN . Exp SC

    TRUE    shift, and go to state 37
    FALSE   shift, and go to state 38
    ID      shift, and go to state 39
    NUM     shift, and go to state 40
    STRING  shift, and go to state 41
    LPAREN  shift, and go to state 42
    NOT     shift, and go to state 44

    Call  go to state 45
    Exp   go to state 94


state 79

   25 Statement: IfBase Statement ELSE . @3 Statement

    $default  reduce using rule 24 (@3)

    @3  go to state 95


state 80

   28 Statement: WhileExp Statement ELSE . @4 Statement

    $default  reduce using rule 27 (@4)

    @4  go to state 96


state 81

   39 Exp: LPAREN Exp RPAREN .

    $default  reduce using rule 39 (Exp)


state 82

   51 Exp: Exp OR M . Exp

    TRUE    shift, and go to state 37
    FALSE   shift, and go to state 38
    ID      shift, and go to state 39
    NUM     shift, and go to state 40
    STRING  shift, and go to state 41
    LPAREN  shift, and go to state 42
    NOT     shift, and go to state 44

    Call  go to state 45
    Exp   go to state 97


state 83

   50 Exp: Exp AND M . Exp

    TRUE    shift, and go to state 37
    FALSE   shift, and go to state 38
    ID      shift, and go to state 39
    NUM     shift, and go to state 40
    STRING  shift, and go to state 41
    LPAREN  shift, and go to state 42
    NOT     shift, and go to state 44

    Call  go to state 45
    Exp   go to state 98


state 84

   40 Exp: Exp . ADDITIVE Exp
   41    | Exp . MULTIPLICATIVE Exp
   50    | Exp . AND M Exp
   51    | Exp . OR M Exp
   52    | Exp . RELATIONAL Exp
   53    | Exp . EQUALITY Exp
   53    | Exp EQUALITY Exp .

    RELATIONAL      shift, and go to state 67
    ADDITIVE        shift, and go to state 68
    MULTIPLICATIVE  shift, and go to state 69

    $default  reduce using rule 53 (Exp)


state 85

   40 Exp: Exp . ADDITIVE Exp
   41    | Exp . MULTIPLICATIVE Exp
   50    | Exp . AND M Exp
   51    | Exp . OR M Exp
   52    | Exp . RELATIONAL Exp
   52    | Exp RELATIONAL Exp .
   53    | Exp . EQUALITY Exp

    ADDITIVE        shift, and go to state 68
    MULTIPLICATIVE  shift, and go to state 69

    RELATIONAL  error (nonassociative)

    $default  reduce using rule 52 (Exp)


state 86

   40 Exp: Exp . ADDITIVE Exp
   40    | Exp ADDITIVE Exp .
   41    | Exp . MULTIPLICATIVE Exp
   50    | Exp . AND M Exp
   51    | Exp . OR M Exp
   52    | Exp . RELATIONAL Exp
   53    | Exp . EQUALITY Exp

    MULTIPLICATIVE  shift, and go to state 69

    $default  reduce using rule 40 (Exp)


state 87

   40 Exp: Exp . ADDITIVE Exp
   41    | Exp . MULTIPLICATIVE Exp
   41    | Exp MULTIPLICATIVE Exp .
   50    | Exp . AND M Exp
   51    | Exp . OR M Exp
   52    | Exp . RELATIONAL Exp
   53    | Exp . EQUALITY Exp

    $default  reduce using rule 41 (Exp)


state 88

   54 IfBase: IF LPAREN Exp RPAREN .

    $default  reduce using rule 54 (IfBase)


state 89

   40 Exp: Exp . ADDITIVE Exp
   41    | Exp . MULTIPLICATIVE Exp
   50    | Exp . AND M Exp
   51    | Exp . OR M Exp
   52    | Exp . RELATIONAL Exp
   53    | Exp . EQUALITY Exp
   55 WhileExp: WHILE LPAREN M Exp . RPAREN

    RPAREN          shift, and go to state 99
    OR              shift, and go to state 64
    AND             shift, and go to state 65
    EQUALITY        shift, and go to state 66
    RELATIONAL      shift, and go to state 67
    ADDITIVE        shift, and go to state 68
    MULTIPLICATIVE  shift, and go to state 69


state 90

   31 Call: ID LPAREN ExpList RPAREN .

    $default  reduce using rule 31 (Call)


state 91

   35 ExpList: Exp COMMA . @5 ExpList

    $default  reduce using rule 34 (@5)

    @5  go to state 100


state 92

   19 Statement: ID ASSIGN Exp SC .

    $default  reduce using rule 19 (Statement)


state 93

   16 Statement: LBRACE @2 Statements RBRACE .

    $default  reduce using rule 16 (Statement)


state 94

   18 Statement: Type ID ASSIGN Exp . SC
   40 Exp: Exp . ADDITIVE Exp
   41    | Exp . MULTIPLICATIVE Exp
   50    | Exp . AND M Exp
   51    | Exp . OR M Exp
   52    | Exp . RELATIONAL Exp
   53    | Exp . EQUALITY Exp

    SC              shift, and go to state 101
    OR              shift, and go to state 64
    AND             shift, and go to state 65
    EQUALITY        shift, and go to state 66
    RELATIONAL      shift, and go to state 67
    ADDITIVE        shift, and go to state 68
    MULTIPLICATIVE  shift, and go to state 69


state 95

   25 Statement: IfBase Statement ELSE @3 . Statement

    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    RETURN    shift, and go to state 24
    IF        shift, and go to state 25
    WHILE     shift, and go to state 26
    BREAK     shift, and go to state 27
    CONTINUE  shift, and go to state 28
    ID        shift, and go to state 29
    LBRACE    shift, and go to state 30

    Statement  go to state 102
    Call       go to state 33
    Type       go to state 34
    IfBase     go to state 35
    WhileExp   go to state 36


state 96

   28 Statement: WhileExp Statement ELSE @4 . Statement

    INT       shift, and go to state 2
    BYTE      shift, and go to state 3
    BOOL      shift, and go to state 4
    RETURN    shift, and go to state 24
    IF        shift, and go to state 25
    WHILE     shift, and go to state 26
    BREAK     shift, and go to state 27
    CONTINUE  shift, and go to state 28
    ID        shift, and go to state 29
    LBRACE    shift, and go to state 30

    Statement  go to state 103
    Call       go to state 33
    Type       go to state 34
    IfBase     go to state 35
    WhileExp   go to state 36


state 97

   40 Exp: Exp . ADDITIVE Exp
   41    | Exp . MULTIPLICATIVE Exp
   50    | Exp . AND M Exp
   51    | Exp . OR M Exp
   51    | Exp OR M Exp .
   52    | Exp . RELATIONAL Exp
   53    | Exp . EQUALITY Exp

    AND             shift, and go to state 65
    EQUALITY        shift, and go to state 66
    RELATIONAL      shift, and go to state 67
    ADDITIVE        shift, and go to state 68
    MULTIPLICATIVE  shift, and go to state 69

    $default  reduce using rule 51 (Exp)


state 98

   40 Exp: Exp . ADDITIVE Exp
   41    | Exp . MULTIPLICATIVE Exp
   50    | Exp . AND M Exp
   50    | Exp AND M Exp .
   51    | Exp . OR M Exp
   52    | Exp . RELATIONAL Exp
   53    | Exp . EQUALITY Exp

    EQUALITY        shift, and go to state 66
    RELATIONAL      shift, and go to state 67
    ADDITIVE        shift, and go to state 68
    MULTIPLICATIVE  shift, and go to state 69

    $default  reduce using rule 50 (Exp)


state 99

   55 WhileExp: WHILE LPAREN M Exp RPAREN .

    $default  reduce using rule 55 (WhileExp)


state 100

   35 ExpList: Exp COMMA @5 . ExpList

    TRUE    shift, and go to state 37
    FALSE   shift, and go to state 38
    ID      shift, and go to state 39
    NUM     shift, and go to state 40
    STRING  shift, and go to state 41
    LPAREN  shift, and go to state 42
    NOT     shift, and go to state 44

    Call     go to state 45
    ExpList  go to state 104
    Exp      go to state 74


state 101

   18 Statement: Type ID ASSIGN Exp SC .

    $default  reduce using rule 18 (Statement)


state 102

   25 Statement: IfBase Statement ELSE @3 Statement .

    $default  reduce using rule 25 (Statement)


state 103

   28 Statement: WhileExp Statement ELSE @4 Statement .

    $default  reduce using rule 28 (Statement)


state 104

   35 ExpList: Exp COMMA @5 ExpList .

    $default  reduce using rule 35 (ExpList)
